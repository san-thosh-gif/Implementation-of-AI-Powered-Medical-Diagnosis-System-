# app/main.py
from flask import Flask, request, jsonify
import torch
from torchvision import transforms
import pydicom
import numpy as np
from PIL import Image

app = Flask(__name__)

# Load trained model
model = MedicalCNN(num_classes=2)
model.load_state_dict(torch.load('ml_models/saved_models/cnn_model.pth'))
model.eval()

@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'No file uploaded'})
    
    file = request.files['file']
    if file.filename.endswith('.dcm'):
        # Process DICOM
        dicom = pydicom.dcmread(file)
        img = dicom.pixel_array.astype(float)
        img = (img - img.min()) / (img.max() - img.min()) * 255.0
        img = Image.fromarray(img).convert('L')
    else:
        img = Image.open(file.stream).convert('L')
    
    # Preprocess and predict
    transform = transforms.Compose([
        transforms.Resize(256),
        transforms.CenterCrop(224),
        transforms.ToTensor(),
        transforms.Normalize([0.5], [0.5])
    ])
    
    img_tensor = transform(img).unsqueeze(0)
    with torch.no_grad():
        output = model(img_tensor)
        prediction = torch.sigmoid(output).item()
    
    return jsonify({
        'prediction': prediction,
        'diagnosis': 'Abnormal' if prediction > 0.5 else 'Normal',
        'confidence': float(prediction if prediction > 0.5 else 1 - prediction)
    })

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
